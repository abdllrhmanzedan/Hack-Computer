/*
A 16-bit counter.
if      reset(t): out(t+1) = 0
else if load(t):  out(t+1) = in(t)
else if inc(t):   out(t+1) = out(t) + 1
else              out(t+1) = out(t)
*/
CHIP PC {
    IN in[16], reset, load, inc;
    OUT out[16];
    
    PARTS:
    Mux16(a=regOut, b=false, sel=reset, out=out1);

    // load iff: the reset=0 and load=1
    Not(in=reset, out=notReset);
    And(a=notReset, b=load, out=canLoad);
    Mux16(a=out1, b=in, sel=canLoad, out=out2);
    
    // increment iff: the reset=0, load=0 and inc=1
    Not(in=load, out=notLoad);
    And(a=notReset, b=notLoad, out=temp);
    And(a=temp, b=inc, out=canInc);
    Inc16(in=regOut, out=next);
    Mux16(a=out2, b=next, sel=canInc, out=regIn);
    
    Register(in=regIn, load=true, out=regOut, out=out);
}