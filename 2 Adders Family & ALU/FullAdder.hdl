/*
Computes the sum of three bits.

By level gate minimization using k-map to the truth table:
a | b | c | carry | sum 
0 | 0 | 0 |   0   |  0  
0 | 0 | 1 |   0   |  1  
0 | 1 | 0 |   0   |  1  
0 | 1 | 1 |   1   |  0  
1 | 0 | 0 |   0   |  1  
1 | 0 | 1 |   1   |  0  
1 | 1 | 0 |   1   |  0  
1 | 1 | 1 |   1   |  1  

sum = ab'c' + a'bc' + a'b'c + abc, which is sum = a Xor b Xor c
carry = ab + ac + bc

Or we can just use two half adders
*/
CHIP FullAdder {
    IN a, b, c;  // 1-bit inputs
    OUT sum,     // Right bit of a + b + c
        carry;   // Left bit of a + b + c

    PARTS:
    HalfAdder(a=a, b=b, sum=s1, carry=c1);
    HalfAdder(a=s1, b=c, sum=sum, carry=c2);
    Or(a=c1, b=c2, out=carry);
}

/*
Different implementation to the same chip:

CHIP FullAdder {
    IN a, b, c;  // 1-bit inputs
    OUT sum,     // Right bit of a + b + c
        carry;   // Left bit of a + b + c

    PARTS:
    Xor(a=a, b=b, out=temp1);
    Xor(a=temp1, b=c, out=sum);

    And(a=a, b=b, out=ab);
    And(a=a, b=c, out=ac);
    And(a=b, b=c, out=bc);
    Or(a=ab, b=ac, out=temp2);
    Or(a=temp2, b=bc, out=carry);
}
*/